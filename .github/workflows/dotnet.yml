name: .NET

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
env:
  CI: 'true'
  DOTNET_CLI_TELEMETRY_OPTOUT: 'true'
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 'true'
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Get existing tag
      id: existingtag
      uses: WyriHaximus/github-action-get-previous-tag@0.2.0
      continue-on-error: true

    - name: Get current version
      run: |
        dotnet tool install --global Nito.ProjProps
        echo "NEWTAG=v$(projprops --project src/Directory.Build.props --name version --output-format SingleValueOnly)" >> $GITHUB_ENV
    - name: Build
      run: dotnet build --no-restore
    - name: Make packages
      run: dotnet pack --no-build --no-restore --output ./artifacts/
    - name: Upload package artifacts
      uses: actions/upload-artifact@v2
      with:
        name: nuget-packages
        path: |
          **/*.nupkg
          **/*.snupkg
    - name: Publish packages
      env:
        NUGET_API_TOKEN: ${{secrets.NUGET_API_KEY}}
      if: env.NEWTAG != steps.existingtag.outputs.tag
      run: |
        dotnet nuget push **/*.nupkg --source https://api.nuget.org/v3/index.json --skip-duplicate --api-key ${{ NUGET_API_TOKEN }}
    - name: Create tag
      if: env.NEWTAG != steps.existingtag.outputs.tag
      run: |
        git tag ${{ env.NEWTAG }}
        git push --tags
